RefactoringTool: Skipping optional fixer: buffer
RefactoringTool: Skipping optional fixer: idioms
RefactoringTool: Skipping optional fixer: set_literal
RefactoringTool: Skipping optional fixer: ws_comma
RefactoringTool: Refactored ./examples/py3/bin/icmBxoExamples.py
RefactoringTool: Files that were modified:
RefactoringTool: ./examples/py3/bin/icmBxoExamples.py
--- ./examples/py3/bin/icmBxoExamples.py	(original)
+++ ./examples/py3/bin/icmBxoExamples.py	(refactored)
@@ -344,20 +344,20 @@
         myName=self.myName()
         thisOutcome = icm.OpOutcome(invokerName=myName)
 
-        print G.icmInfo
+        print(G.icmInfo)
 
         for eachArg in effectiveArgsList:
             icm.ANN_here("{}".format(eachArg))
 
-        print (icm.__file__)
-        print sys.path
+        print((icm.__file__))
+        print(sys.path)
 
         import imp
-        print(imp.find_module('unisos/icm'))
+        print((imp.find_module('unisos/icm')))
 
         @ucf.runOnceOnly
         def echo(str):
-            print str
+            print(str)
             
         echo("first")
         echo("second")  # Should not run
@@ -427,10 +427,10 @@
     Could also be done with @subjectToDryRun
     """
     if icm.icmRunArgs_isRunModeDryRun():
-        print( "Skipping This Intrusive Function" + arg )
+        print(( "Skipping This Intrusive Function" + arg ))
         return
 
-    print( "Performing Some Intrusive Action" + arg )
+    print(( "Performing Some Intrusive Action" + arg ))
 
     
 
